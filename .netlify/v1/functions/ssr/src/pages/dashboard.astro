---
import BaseLayout from '../layouts/BaseLayout.astro';
import '../styles/styledash.css';
import { supabase } from "../lib/supabase";



// Retrieve authentication tokens from cookies.
const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");


type Posts = {
  context: string;
}
// Fetch posts from Supabase
const posts = await supabase
  .from('v_posts')
  .select('content, title, author_email, updated_at')
// const posts2: Posts[]  = await posts.data
// console.log("posts2 -> " + posts2 )



// Redirect to sign-in if tokens are missing.
if (!accessToken || !refreshToken) {
  return Astro.redirect("/signin");
}



// Attempt to set the session using the tokens.
let session;
try {
  session = await supabase.auth.setSession({
    refresh_token: refreshToken.value,
    access_token: accessToken.value,
  });

  // If session setting fails, clear tokens and redirect to sign-in.
  if (session.error) {
    Astro.cookies.delete("sb-access-token", {
      path: "/",
    });
    Astro.cookies.delete("sb-refresh-token", {
      path: "/",
    });
    return Astro.redirect("/signin");
  }
} catch (error) {
  // Handle unexpected errors: clear tokens and redirect to sign-in.
  Astro.cookies.delete("sb-access-token", {
    path: "/",
  });
  Astro.cookies.delete("sb-refresh-token", {
    path: "/",
  });
  return Astro.redirect("/signin");
}



// Retrieve the email of the authenticated user.
const email = session.data.user?.email;
---





<BaseLayout title="dashboard">

  <!-- Dashboard Welcome Message -->
  <h1>Hello, {email}!</h1>
  <img src="/welcome.svg" alt="Welcome" />
  <p>We're glad to see you today</p>
  <p>Explore Stories by Our Community and create your own:</p>

 <h2>Latest Posts</h2>

{
  posts.data?.map(({ title,content, author_email, updated_at}) => (
    <article>
      <p>Title and Author: {title} {author_email}</p>
      <p>{content}</p>
      <p>Posted: {updated_at}</p>
    </article>
  ))
}

  <form action="/api/auth/posts" method="post"> 

    <label for="postTitle">Title:</label> 
    <input type="text" name="postTitle" id="postTitle" placeholder="Type title here"> 
    <label for="postContext">Tell your story:</label> 
    <input type="text" name="postContext" id="postContext" placeholder="Type your story here"> 
    <button id="post" type="submit" class="buttonpost">Post</button> 
  </form>
    

  <!-- Sign-Out Form -->
  <form action="/api/auth/signout">
    <button type="submit" class="out">Sign Me Out</button>
  </form>
</BaseLayout>